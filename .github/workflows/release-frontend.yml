name: Release frontend

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  send-start-deploy-telegram-message:
    name: üì¢ Send Telegram message
    runs-on: ubuntu-latest
    steps:
      - name: üîß Checkout source code
        uses: actions/checkout@v4

      - name: üì¨ Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üèπ –ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è –ø–∞–∫–µ—Ç–∞ ${{ github.REPOSITORY }}
            –ö–æ–º–º–∏—Ç: ${{ github.event.head_commit.message }}
            –ê–≤—Ç–æ—Ä: ${{ github.event.head_commit.author.name }}
            –í—Ä–µ–º—è: ${{ github.event.head_commit.timestamp }}

  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: üîß Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß NewTag
        id: tag
        uses: JinoArch/get-latest-tag@latest

      - name: üîß Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Generate build-info.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-8)
          BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          BRANCH="main"
          FULL_SHA="${{ github.sha }}"
          TAG="null"
          
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG="${{ github.ref_name }}"
          fi
          
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/$SHORT_SHA"
          
          cat <<EOF > build.info.json
          {
          "buildTime": "$BUILD_TIME",
          "commitFull": "$FULL_SHA",
          "commit": "$SHORT_SHA",
          "tag": $( [ "$TAG" = "null" ] && echo null || echo "\"$TAG\"" ),
          "branch": "$BRANCH",
          "commitUrl": "$COMMIT_URL"
          }
          EOF

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(npx changelogen --from=${{ steps.tag.outputs.previousTag }} --to=${{ steps.tag.outputs.latestTag }} | sed '/^\[log\]/d')
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Install dependencies and build
        run: |
          npm install
          npm run start:build

      - name: Create ZIP archive of /dist
        run: |
          zip -r aura-frontend.zip ./dist

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: aura-frontend.zip
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          append_body: true
          make_latest: true
          draft: false
          prerelease: false
          name: ${{ github.ref_name }}
          body: |
            # üåä Aura Frontend v${{ github.ref_name }}
            
            ${{ env.CHANGELOG }}
            
            ### üì¶ Artifacts
            - aura-frontend.zip - archive with built frontend
            
            ### üîç Details
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Build time: ${{ github.event.head_commit.timestamp }}

  send-telegram-message:
    name: üì¢ Send Telegram message
    needs: [ build-and-release ]
    runs-on: ubuntu-latest
    steps:
      - name: üîß Checkout source code
        uses: actions/checkout@v4

      - name: üì¨ Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚úÖ –ü–∞–∫–µ—Ç ${{ github.REPOSITORY }} —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω
            –¢–µ–≥: *${{ github.sha }}*
            –ö–æ–º–º–∏—Ç: ${{ github.event.head_commit.message }}
            –ê–≤—Ç–æ—Ä: ${{ github.event.head_commit.author.name }}
            –í—Ä–µ–º—è: ${{ github.event.head_commit.timestamp }}

  notify-on-error:
    name: üì¢ Send Telegram message
    runs-on: ubuntu-latest
    needs: [ build-and-release ]
    if: failure()
    steps:
      - name: üîß Checkout source code
        uses: actions/checkout@v4

      - name: üö® Send error notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚ùå –û—à–∏–±–∫–∞ –≤ ${{ github.REPOSITORY }}: –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–±–æ—Ä–∫–µ
